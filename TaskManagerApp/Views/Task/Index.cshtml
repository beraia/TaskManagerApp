@using TaskManagerApp.Models.Domain;
@model List<TaskManagerApp.Models.Domain.Task>;
@{
    Pager pager = new Pager();

    int pageNo = 0;

    if(ViewBag.Pager != null)
    {
        pager = ViewBag.Pager;
        pageNo = pager.CurrentPage;
    }
}

<h1>Tasks</h1>

<table class="table">
    <thead>
        <tr>
            <th>Title</th>
            <th>Content</th>
            <th>Status</th>
            <th> </th>
        </tr>
    </thead>
    <tbody>
        @foreach(var task in Model)
        {
            <tr>
                <td>@task.Title</td>
                <td>@task.Content</td>
                <td>@task.Status</td>
                <td><a href="View/@task.Id">View</a></td>
            </tr>
        }
    </tbody>
</table>


<div class="container">
    @if (pager.TotalPages > 0)
    {
        <ul class="pagination justify-content-end">
            @for (var pge = pager.StartPage; pge <= pager.EndPage; pge++)
            {
                <li class="page-item @(pge == pager.CurrentPage ? "active" : "")">
                    <a class="page-link" asp-asp-controller="Task" asp-action="Index" asp-route-pg="@pge">@pge</a>
                </li>
            }

            @if (pager.CurrentPage < pager.TotalPages)
            {
                <li class="page-item">
                    <a class="page-link" asp-asp-controller="Task" asp-action="Index" asp-route-pg="@(pager.CurrentPage + 1)">Next</a>
                </li>
                <li class="page-item">
                    <a class="page-link" asp-asp-controller="Task" asp-action="Index" asp-route-pg="@(pager.TotalPages)">Last</a>
                </li>
            }

        </ul>
    }

</div>